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

int partition (int A[], int low, int high) 
{ 
	int i, j = 0;
	int pivot = A[high];
	i = (low - 1); 
	for (j = low; j < high; j++) 
	{ 
		if (A[j] < pivot) 
		{ 
			i++; 
			swap(&A[i], &A[j]); 
		} 
	} 
	swap(&A[i + 1], &A[high]); 
	return (i + 1); 
}

void swap(int *SwapA, int *SwapB) 
{ 
	int temp = *SwapA; 
	*SwapA = *SwapB; 
	*SwapB = temp; 
} 

#if QSM 
	int middle = (high+low)/2; 
	swap(&A[middle], &A[high]); 
#elif QSRND 
	int random = (rand() % (high-low+1)) + low;  
	swap(&A[random], &A[high]); 
#endif 
int pivot = A[high];